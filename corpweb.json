{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "engineeringVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.0.0.0/18",
        "Tags": [{"Key": "Name", "Value": "engineeringVPC"}]
      }
    },
    "publicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "engineeringVPC"
        },
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone" : "us-east-1a",
        "Tags": [{"Key": "Name", "Value": "publicSubnet1"}]
      }
    },
    "publicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "engineeringVPC"
        },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone" : "us-east-1b",
        "Tags": [{"Key": "Name", "Value": "publicSubnet2"}]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {"Ref": "InternetGateway"},
        "VpcId": {"Ref": "engineeringVPC"}
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "engineeringVPC"},
		"Tags": [{"Key": "Name", "Value": "PublicRouteTable"}]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "GatewayId": {"Ref": "InternetGateway"}
      },
      "DependsOn": ["InternetGateway"]
    },
    "publicSubnet1RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet1"
        }
      }
    },
    "publicSubnet2RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet2"
        }
      }
    },
    "webserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "engineeringVPC"
        },
        "GroupDescription": "Allow access from HTTP and SSH traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "YourIp"}
          }
        ],
        "Tags" : [ {"Key": "Name", "Value": "webserversSG" } ]
      }
    },
	"web1": {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
      	"AvailabilityZone" : "us-east-1a",
      	"ImageId" : "ami-3ea13f29",
      	"InstanceType" : {"Ref": "InstanceType"},
      	"KeyName" : {"Ref": "KeyPair"},
   		"NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref" : "webserversSG" }],
          "SubnetId": { "Ref" : "publicSubnet1" }
        } ],
      	"Tags" : [ {"Key": "Name", "Value": "web1" } ]
      }
	},
	"web2": {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
      	"AvailabilityZone" : "us-east-1b",
      	"ImageId" : "ami-3ea13f29",
      	"InstanceType" : {"Ref": "InstanceType"},
      	"KeyName" : {"Ref": "KeyPair"},
   		"NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref" : "webserversSG" }],
          "SubnetId": { "Ref" : "publicSubnet2" }
        } ],
      	"Tags" : [ {"Key": "Name", "Value": "web2" } ]
      }
	},
	"websiteLBListener" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "engineeringWebservers" }
        }],
        "LoadBalancerArn" : { "Ref" : "engineeringLB" },
        "Port" : "80",
        "Protocol" : "HTTP"
      }
    },
    "engineeringLB": {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {    
        "Name" : "engineeringLB",
        "Scheme" : "internet-facing",
        "Subnets" : [ {"Ref": "publicSubnet1"}, {"Ref": "publicSubnet2"} ],
        "Tags" : [ {"Key": "Name", "Value": "engineeringLB" } ],
        "Type" : "application",
		"SecurityGroups" : [{"Ref": "webserversSG"}]
      }
    },
	"engineeringWebservers": {
	  "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
	  "Properties" : {
	  	"Name" : "engineeringWebservers",
	  	"Port" : 80,
	  	"Protocol" : "HTTP",
	  	"Tags" : [ {"Key": "Name", "Value": "engineeringWebservers"} ],
	  	"Targets" : [ {"Id": {"Ref": "web1"}, "Port": 80}, {"Id": {"Ref": "web2"}, "Port":80}],
	  	"VpcId" : {"Ref": "engineeringVPC"},
		"HealthCheckPath" : "/",
		"HealthCheckPort" : "80",
		"HealthCheckProtocol" : "HTTP"
	  }
	}
  },
  "Parameters": {
    "InstanceType": {
      "Description": "Server instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 type."
    },
    "KeyPair": {
      "Description": "Name of your EC2 KeyPair to enable SSH access to the instances.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "YourIp": {
      "Description": "The current CIDR IP address of your workstation (x.x.x.x/32).",
      "Type": "String"
    }
  },
  "Outputs": {
    "weburl": {
	  "Description": "The DNSName of the engineeringLB load balancer",  
      "Value" : { "Fn::GetAtt" : [ "engineeringLB", "DNSName" ]}
    }
  }
}